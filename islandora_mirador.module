<?php

/**
 * @file
 * Supports Islandora submodule islandora_mirador.
 */

use Drupal\Component\Utility\Html;
use Drupal\Core\Config\ImmutableConfig;

use Drupal\islandora_mirador\IslandoraMiradorPluginPluginBase;
use Drupal\islandora_mirador\IslandoraMiradorPluginInterface;
use Solarium\Core\Query\QueryInterface as SolariumQueryInterface;
use Drupal\search_api\Query\QueryInterface;

/**
 * Implements hook_theme().
 */
function islandora_mirador_theme() {
  return [
    'mirador' => [
      'variables' => [
        'iiif_manifest_url' => NULL,
        'mirador_view_id' => NULL,
      ],
      'template' => 'mirador',
    ],
  ];
}

/**
 * Implements template_preprocess_*().
 */
function template_preprocess_mirador(&$variables) {
  $variables['mirador_view_id'] = Html::getUniqueId($variables['mirador_view_id']);
  $variables['#attached']['drupalSettings']['mirador_view_id'] = $variables['mirador_view_id'];

  /**
   * @var \Drupal\islandora_mirador\IslandoraMiradorPluginManager
   */
  $mirador_plugin_manager = \Drupal::service('plugin.manager.islandora_mirador');

  /**
   * @var \Drupal\Core\Config\ImmutableConfig
   */
  $config = Drupal::service('config.factory')->get('islandora_mirador.settings');

  $mirador_plugins = $mirador_plugin_manager->getDefinitions();
  $enabled_plugins = $config->get('mirador_enabled_plugins');
  $variables['#attached']['drupalSettings']['mirador_enabled_plugins'] = array_filter(array_values($enabled_plugins));

  $window_config = [];
  foreach ($mirador_plugins as $plugin_id => $plugin_definition) {
    if ($enabled_plugins[$plugin_id]) {
      $plugin_instance = $mirador_plugin_manager->createInstance($plugin_id);
      /**
       * @var Drupal\islandora_mirador\IslandoraMiradorPluginInterface
       */
      $plugin_instance->windowConfigAlter($window_config);
    }
  }
  $variables['#attached']['drupalSettings']['mirador_window_settings'] = $window_config;
}

/**
 * Implements hook_library_info_alter().
 */
function islandora_mirador_library_info_alter(&$libraries, $extension) {
  if ($extension == 'islandora_mirador') {

    $config = \Drupal::service('config.factory')->get('islandora_mirador.settings');
    if ($config->get('mirador_library_installation_type') == 'local') {
      unset($libraries['mirador']['remote']);
      unset($libraries['mirador']['license']);
      $libraries['mirador']['js']['/libraries/mirador/dist/main.js'] = [];
    }
  }
}

/**
 * Implements hook_search_api_solr_query_alter().
 *
 * Add ocr highlight params into the solr query.
 *
 * It's a mystery as to why it should be necessary to alter the solarium query in order to add the
 * highlight parameters. We should be able to add them inside the search_api query build using the
 * `solr_param_` method to inject solarium parameters: https://git.drupalcode.org/project/search_api_solr/-/blob/4.x/src/Plugin/search_api/backend/SearchApiSolrBackend.php#L1605-1610
 * However that is not working, and so we're reduced to this ugly alter hook.
 *
 */
function islandora_mirador_search_api_solr_query_alter(SolariumQueryInterface $solarium_query, QueryInterface $query) {
  // To get a list of solarium events:
  // @see http://solarium.readthedocs.io/en/stable/customizing-solarium/#plugin-system
  if ($query->getOption('no_highlight')) {
    $solarium_query->addParam('hl', 'false');
    /* @var \Solarium\Component\Highlighting\Highlighting $hl */
    $hl = $solarium_query->getHighlighting();
    $hl->clearFields();
  }

  if ($query->getOption('ocr_highlight')) {
    /* @var \Solarium\Component\Highlighting\Highlighting $hl */
    $hl = $solarium_query->getHighlighting();
    $hl->clearFields();

    $solarium_query->addParam('hl.ocr.fl', $query->getOption('ocr_highlight'));
    $solarium_query->addParam('hl.ocr.absoluteHighlights', 'on');
    $solarium_query->addParam('hl.method', 'UnifiedHighlighter');
  }
}
